#include <iostream>
#include <vector>
#include <string>

using namespace std;

int main()
{
    vector<string> words;
    string stroka;
    getline(cin, stroka);
    string word;
    for (int i = 0; i <= stroka.size(); ++i)
    {
        if ((stroka[i] != ' ') && (stroka[i] != '\0'))
        {
            word += stroka[i];
        }
        else
        {
            words.push_back(word);
            word = ""s;
        }
    }
    for (auto vec : words)
    {
        cout << '[' << vec << ']' << endl;
    }
    return 0;
}




/*
Задание 1
аписать программу, которая считывает предложение и разбивает его на слова. После применить вектор, чтобы сохранить все слова в вектор. Затем их нужно вывести на экран.
Вектор строк назовите words — имя переменной будет учитываться при проверке.

Ограничения:
Переменная, в которую сохраняются слова запроса, должна называться words и иметь тип vector<string>. Слова в ней должны идти в таком же порядке, как и в исходной строке.

Формат ввода:
На вход подаётся строка, в которой все слова разделены одним пробелом. В начале и в конце строки пробелов нет.

Формат вывода:
На каждой строчке выведите слово в квадратных скобках. Выводите слова в том порядке, в котором они поступали на вход. Для вывода можете использовать цикл из условия.

Пример ввода:
find me a cat 

Пример вывода:
[find]
[me]
[a]
[cat] 

*/




/*
Решение от авторов:

#include <iostream>
#include <string>
#include <vector>

using namespace std;

int main() {
    /* объявляем переменную для хранения строки вводимой пользователем */
    string query;
    /* FOR SUPPORT: считываем строку целиком */
    getline(cin, query);

    /* объявляем вектор строк для хранения слов */
    vector<string> words;
    /* объявляем строку для хранения слова */
    string word;
    /* начинаем цикл от 0 до размера строки (проходим посимвольно по всей строке) */
    for (char c : query) {
        /* условие на выполнение блока:
         * символ это пробел */
        if (c == ' ') {
            /* добавляем слово в конец вектора слов */
            words.push_back(word);
            /* присваиваем переменной пустую строку, т.е. начинаем новое слово */
            word = ""s;
        /* условие на выполнение блока (когда все условия выше - не верны):
         * символ это не пробел (обратное условие) */
        } else {
            /* добавляем символ к строке.
             * Этим блоком мы собираем слово в переменной word */
            word += c;
        }
    }
    /* добавляем последнее слово word в конец вектора words */
    words.push_back(word);

    /* проходим по всем словам из вектора слов */
    for (string word : words) {
        /* выводим слово между [ и ] */
        cout << '[' << word << ']' << endl;
    }
return 0;
}

*/